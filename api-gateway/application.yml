
            
server:
    port: 2022
       
       
spring:
    application:
        name: omg-api-gateway
    cloud:
        gateway:
            default-filters:
             - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
             - AddResponseHeader=Access-Control-Allow-Origin, *
        
            discovery:
                locator:
                    enabled: true                 
            filter:
              circuit-breaker:
                enabled: true 
                        
#            globalcors:
#              corsConfigurations:
#               '[/**]':
#                 allowedOrigins: "*"
#    #             allowCredentials: true
#                 allowedHeaders:
#                  - content-type
#                  - authorization
#                 allowedMethods:
#                  - GET
#                  - POST
           
               
resilience4j:
 circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      minimumNumberOfCalls: 5
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 2s
      failureRateThreshold: 5
      eventConsumerBufferSize: 10
      slowCallDurationThreshold: 200ms
      slowCallRateThreshold: 30
      recordExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException
      ignoreExceptions:
        - java.lang.IllegalStateException
    shared:
      slidingWindowSize: 100
      permittedNumberOfCallsInHalfOpenState: 30
      waitDurationInOpenState: 1s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
      ignoreExceptions:
        - java.lang.IllegalStateException
  instances:
    backendA:
      baseConfig: default
    backendB:
      slidingWindowSize: 10
      minimumNumberOfCalls: 10
      permittedNumberOfCallsInHalfOpenState: 3
      waitDurationInOpenState: 1s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
      #recordFailurePredicate: com.example.demo.HttpInternalServicePredicate

resilience4j.timelimiter:
  time-limiter-aspect-order: 398
  configs:
    default:
      timeoutDuration: 10s
      cancelRunningFuture: false
  instances:
    backendB:
      timeoutDuration: 25s
      